parameters:
  gitHubConnection: ""                      # Enter the service connection name for your GitHub connection. More: https://aka.ms/AA3am5s

  job_condition: true                      # Default is false since gitHubConnection need to be set manually. Example: `and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))`
  job_displayName: Deploy asserts to github
  job_name: github_deploy

  artifactName: target
  assetUploadMode: replace
  action: create
  isPreRelease: false
  repositoryName: '$(Build.Repository.Name)'

jobs:
  - job: ${{ parameters['job_name'] }}
    displayName: ${{ parameters['job_displayName'] }}
    condition: ${{ parameters['job_condition'] }}
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifactName: ${{ parameters['artifactName'] }}
          targetPath: "$(Pipeline.Workspace)/${{parameters['artifactName']}}"
      - bash: |
          TAG="$(git describe --tag)"
          echo $TAG
          echo "##vso[task.setvariable variable=tag]$TAG"
          DATE="$(date +%Y-%m-%d)"
          echo "##vso[task.setvariable variable=build.date]$DATE"
        displayName: "Create date and tag variables"

      - task: GitHubRelease@1
        displayName: "GithubRelease '$(TAG)-$(build.date)'"
        inputs:
            gitHubConnection: ${{ parameters['githubConnection'] }}
            tagSource: 'userSpecifiedTag'
            title: '$(TAG)'
            tag: '$(TAG)'
            assetUploadMode: ${{ parameters['assetUploadMode'] }}
            action: ${{ parameters['action'] }}
            assets: "$(Pipeline.Workspace)/${{parameters['artifactName']}}/*"  # target is the same what artifactName in download step
            repositoryName: ${{ parameters['repositoryName'] }}
            isPreRelease: ${{ parameters['isPreRelease'] }}
