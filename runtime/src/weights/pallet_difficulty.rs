
//! Autogenerated weights for `pallet_difficulty`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-04-04, STEPS: `50`, REPEAT: 30, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/creditcoin-node
// benchmark
// --chain
// dev
// --steps=50
// --repeat=30
// --pallet
// pallet_difficulty
// --extrinsic=*
// --execution
// wasm
// --wasm-execution=compiled
// --heap-pages=10000
// --output
// ./runtime/src/weights/pallet_difficulty.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_difficulty`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_difficulty::WeightInfo for WeightInfo<T> {
	// Storage: Difficulty TargetBlockTime (r:0 w:1)
	fn set_target_block_time() -> Weight {
		(1_800_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Difficulty DifficultyAdjustmentPeriod (r:0 w:1)
	fn set_adjustment_period() -> Weight {
		(1_900_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
