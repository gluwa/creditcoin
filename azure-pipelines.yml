# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  batch: true
  branches:
    include:
    - refs/tags/*
  paths:
    exclude:
    - README.md

pr: none

pool:
  vmImage: ubuntu-latest

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'f5aa2da0-fdf0-4f31-b77d-6b7c374f51e6'
  imageRepository: 'cc-substrate/testnet'
  containerRegistry: 'ccacrtest.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        # Determine the tag for the image: If it is a stable release (e.g 2.0.1),
        # tags will be 2.0.1,stable,latest. For release candidates (e.g 2.0.1-beta),
        # tags will be 2.0.2-beta,beta,latest.
        export tag=$(git describe --tag)
        export ccTag=$(echo $tag | awk -F- '{print $2}')
        if [ -z "$ccTag" ] ; then
          echo "##vso[task.setvariable variable=gitTag;]$tag"
          echo "##vso[task.setvariable variable=ccTag;]stable"
          export tag=($tag,stable)
        else
          echo "##vso[task.setvariable variable=gitTag;]$tag"
          echo "##vso[task.setvariable variable=ccTag;]$ccTag"
          export tag=($tag,$ccTag)
        fi
        echo "Image tags are: $tag"
      displayName: Get tags

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(gitTag)
          $(ccTag)
