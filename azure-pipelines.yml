# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  batch: true
  branches:
    include:
    - refs/tags/*

pr: none

pool:
  vmImage: ubuntu-latest

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  imageRepository: 'gluwa/creditcoin'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  dockerRegistryServiceConnection: 'Gluwa David Lebee'
  vmImageName: 'ubuntu-latest'

stages:
# Docker Image
- stage: build
  displayName: 'Build Containers & Artifacts'
  jobs:
  - job: Build
    displayName: 'docker-image'
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        # Determine the tag for the image: If it is a stable release (e.g 2.0.1),
        # tags will be 2.0.1,stable,latest. For release candidates (e.g 2.0.1-beta),
        # tags will be 2.0.2-beta,beta,latest.
        export tag=$(git describe --tag)
        export ccTag=$(echo $tag | awk -F- '{print $2}')
        if [ -z "$ccTag" ] ; then
          echo "##vso[task.setvariable variable=gitTag;]$tag"
          echo "##vso[task.setvariable variable=ccTag;]stable"
          export tag=($tag,stable)
        else
          echo "##vso[task.setvariable variable=gitTag;]$tag"
          echo "##vso[task.setvariable variable=ccTag;]$ccTag"
          export tag=($tag,$ccTag)
        fi
        echo "Image tags are: $tag"
      displayName: Get tags

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(gitTag)
          $(ccTag)

#Binaries
  - template: ./ci/templates/build.yml
    parameters:
      artifactName: target


- stage: PublishArtifacts
  displayName: 'Publish Artifacts'
  dependsOn:
    - build
  jobs:
  - template: ./ci/templates/release.yml
    parameters:
      job_condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/CSUB-175-automate-github-release'))
      gitHubConnection: 'CreditcoinRelease'
      artifactName: target
