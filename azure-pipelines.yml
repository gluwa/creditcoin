# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  batch: true
  branches:
    include:
    - refs/tags/*
  paths:
    exclude:
    - README.md

pr: none

#Use self hosted build server. Resource ID: resourceGroups/devcommon/providers/Microsoft.Compute/virtualMachines/Ubuntu16BuildServer
pool:
  name: Creditcoin
  demands:
   - agent.name -equals Ubuntu16BuildServer

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'f5aa2da0-fdf0-4f31-b77d-6b7c374f51e6'
  imageRepository: 'cc-substrate/testnet'
  containerRegistry: 'ccacrtest.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  registryName: 'ccacrtest'
  DOCKER_BUILDKIT: 1

stages:
- stage: Build
  displayName: Build and Push Image
  jobs:
  - job: Build
    displayName: Build
    steps:
    - script: |
        # Determine the tag for the image: If it is a stable release (e.g 2.0.1),
        # tags will be 2.0.1,stable,latest. For release candidates (e.g 2.0.1-beta),
        # tags will be 2.0.2-beta,beta,latest.
        export tag=$(git describe --tag)
        export ccTag=$(echo $tag | awk -F- '{print $2}')
        if [ -z "$ccTag" ] ; then
          echo "##vso[task.setvariable variable=gitTag;]$tag"
          echo "##vso[task.setvariable variable=ccTag;]stable"
          export tag=($tag,stable)
        else
          echo "##vso[task.setvariable variable=gitTag;]$tag"
          echo "##vso[task.setvariable variable=ccTag;]$ccTag"
          export tag=($tag,$ccTag)
        fi
        echo "Image tags are: $tag"
      displayName: Get tags

    - task: Docker@2
      displayName: Docker Login
      inputs:
        containerRegistry: $(registryName)
        command: login

    - task: Docker@2
      displayName: Build Image
      inputs:
        containerRegistry: $(registryName)
        repository: $(imageRepository)
        command: build
        Dockerfile: $(dockerfilePath)
        tags: |
          latest
          $(gitTag)
          $(ccTag)

    #Push Image to registry
    - task: Docker@2
      displayName: Push Image
      inputs:
        command: push
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        tags: |
          latest
          $(gitTag)
          $(ccTag)
