/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from 'ethers';
import { FactoryOptions, HardhatEthersHelpers as HardhatEthersHelpersBase } from '@nomiclabs/hardhat-ethers/types';

import * as Contracts from '.';

declare module 'hardhat/types/runtime' {
    interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
        getContractFactory(
            name: 'AccessControl',
            signerOrOptions?: ethers.Signer | FactoryOptions,
        ): Promise<Contracts.AccessControl__factory>;
        getContractFactory(
            name: 'ERC20',
            signerOrOptions?: ethers.Signer | FactoryOptions,
        ): Promise<Contracts.ERC20__factory>;
        getContractFactory(
            name: 'IERC20',
            signerOrOptions?: ethers.Signer | FactoryOptions,
        ): Promise<Contracts.IERC20__factory>;
        getContractFactory(
            name: 'ETHlessTransfer',
            signerOrOptions?: ethers.Signer | FactoryOptions,
        ): Promise<Contracts.ETHlessTransfer__factory>;
        getContractFactory(
            name: 'TestToken',
            signerOrOptions?: ethers.Signer | FactoryOptions,
        ): Promise<Contracts.TestToken__factory>;

        // default types
        getContractFactory(
            name: string,
            signerOrOptions?: ethers.Signer | FactoryOptions,
        ): Promise<ethers.ContractFactory>;
        getContractFactory(
            abi: any[],
            bytecode: ethers.utils.BytesLike,
            signer?: ethers.Signer,
        ): Promise<ethers.ContractFactory>;
    }
}
